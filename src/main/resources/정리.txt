
    해싱 알고리즘 쓰는 이유
        db 보안을 위해 비밀번호를 암호화한다
        해싱이란 임의의 문자열로 변경하는 것이다.
        spring security default 해싱알고리즘 bcrypt

    해싱 알고리즘 쓸때 솔트를 쓰는 이유
        미리 문자열을 해싱알고리즘에 돌려 테이블을 만들어 비밀번호를 유추할 수 있다.
        따라서 db에 저장할때 솔트 값을 같이 저장한다
        bcrypt 경우 솔트를 랜덤한 값을 써도 괜찮다, 해싱된 결과 값이 매번 다르다
        bcrypt의 장점 속도를 일부러 늦춰 해커들이 많이 시도하지 못하게 함

        -그럼에도 로그인을 할 수 있는 이유는
         솔트 값은 인코딩할때만 사용하고, 평문과 해시된 값을 다시 해싱하면 원래 해시값이 나온다
